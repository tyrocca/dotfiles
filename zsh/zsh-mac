# Path to your oh-my-zsh installation.
export ZSH=/Users/tyrocca/.oh-my-zsh

DEFAULT_USER=tyrocca
# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME=robbyrussell
#ZSH_THEME=agnoster

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment to set the update prompts
DISABLE_UPDATE_PROMPT=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git git-hubflow osx tmux tmuxinator web-search python \
    django zsh-syntax-highlighting npm pip tmux yarn)


# User configuration
export EDITOR="nvim"

# PATH configurations
export PATH="$PATH:`yarn global bin`"
export PATH="/usr/local/opt/openssl/bin:$PATH"

alias npm-exec='PATH=$(npm bin):$PATH'

# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# set cow says thing
COWDIR="/usr/local/Cellar/cowsay/3.04/share/cows/"
fortune | cowsay -f $(ls $COWDIR | gshuf | head -n1) | lolcat
echo ""

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
export SSH_KEY_PATH="~/.ssh/"
export PEM_KEY_PATH="~/.ssh/keys/"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# aliases
alias zshconfig="nvim ~/.zshrc"
alias ohmyzsh="nvim ~/.oh-my-zsh"
alias vimconfig="nvim ~/.vimrc"
alias vimplugins="nvim ~/dotfiles/vim/plugins.vim"
alias activate_env="source env/bin/activate"

# cd to volumes
export HARD_DRIVE='/Volumes/Macintosh\ HD/Symlinks'
alias hd_folder="cd $HARD_DRIVE"
alias desktop="cd ~/Desktop/"
alias code="cd ~/Code/"


#bindkey -v
bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward

export KEYTIMEOUT=1

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# fzf searching
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export WORKON_HOME=~/Envs
export PROJECT_HOME=~/Code/current_projects
source /usr/local/bin/virtualenvwrapper.sh

# nice ssh reagent thing
ssh-reagent () {
  for agent in /tmp/ssh-*/agent.*; do
      export SSH_AUTH_SOCK=$agent
      if ssh-add -l 2>&1 > /dev/null; then
         echo Found working SSH Agent:
         ssh-add -l
         return
      fi
  done
  echo Cannot find ssh agent - maybe you should reconnect and forward it?
}


export PIP_ROOT_DIR='/usr/local/lib/python2.7/site-packages'


##########
# Github #
##########
clean_merged_branches() {
    git branch --merged | egrep -v "(^\*|master|dev)" | xargs git branch -d
}


#################
# Quorum Things #
#################
source ~/dotfiles/zsh/quorum_rc.zsh
